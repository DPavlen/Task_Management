version: '3.5'

volumes:
  static:
  backend_static:
  backend_media:
  pg_data:

services:

  db:
    image: postgres:13.0-alpine
    env_file: .env
    volumes:
      - pg_data:/var/lib/postgresql/data/

  backend:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    volumes:
      - backend_static:/app/static/
      - backend_media:/app/media/
    ports:
      - "8000:8000"
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env

  nginx:
    build:
      context: ./infra
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: always
    volumes:
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/app/static/
      - backend_static:/backend_static/
      - backend_media:/backend_media/

  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
    env_file:
      - .env

  flower:
    image: mher/flower:0.9.7
    ports:
      - "5555:5555"
    environment:
      - CELERY_BROKER_URL=amqp://rmuser:rmpassword@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=rpc://
      - FLOWER_BASIC_AUTH=rmuser:rmpassword
      - FLOWER_API_URL=http://rabbitmq:15672/api/
    depends_on:
      - rabbitmq
      - backend